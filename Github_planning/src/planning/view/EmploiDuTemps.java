
package planning.view;

import java.util.Observable;
import java.util.Observer;
import javax.swing.table.AbstractTableModel;
import planning.model.PlanningModel;

/**
 *
 * @author Pascal
 */
public class EmploiDuTemps extends javax.swing.JPanel implements Observer {
    
    private final PlanningModel planningModel;
    public final ModeleTableau modeleTableau;
    
    /**
     * Creates new form EmploiDuTemps
     * @param planningModel
     */
    public EmploiDuTemps(PlanningModel planningModel) {
        this.planningModel = planningModel;
        modeleTableau= new ModeleTableau();
        planningModel.addObserver(EmploiDuTemps.this);
        initComponents();
    }

    @Override
    public void update(Observable o, Object o1) {
        modeleTableau.fireTableDataChanged();
    }
    
    public class ModeleTableau extends AbstractTableModel {

       

        @Override
        public int getRowCount() {
            return 2;
        }

        @Override
        public int getColumnCount() {
            return 7;
        }
        
         @Override
        public String getColumnName(int column) {
                     
           
            String res;
            switch (column) {
                case 0:
                    res = "lundi";
                    break;
                case 1:
                    res = "mardi";
                    break;
                case 2:
                    res = "mercredi";
                    break;
                case 3:
                    res = "jeudi";
                    break;
                case 4:
                    res = "vendredi";
                    break;
                case 5:
                    res="samedi";
                    break;
                case 6:
                    res="dimanche";
                    break;
                default:
                    res = "";
            }
            return res;
           
        }

        @Override
        public Object getValueAt(int i, int i1) {
            /**
             * ici j'ai penser a mettre le nom d'un module pour l'identifier
             * dans le planning dans la table
             *
             */
            return null;
        }
        
        public boolean isCellEditable(int row, int column) {
           if ((column==5)|| (column==6)){
        return false;
    }
           return true;
    }

       

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(modeleTableau);
        jTable1.setMaximumSize(new java.awt.Dimension(15, 15));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 66, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
